on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      arch:
        required: true
        type: string
      docker_distros:
        required: true
        type: string
      dotnet_versions:
        required: true
        type: string

env:
  DOTNET_INSTALL_DIR: "./.dotnet"
  DOTNET_ROLL_FORWARD: "Major"

jobs:
  docker:
    name: ${{ matrix.docker_distro }} - net${{ matrix.dotnet_version }}
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        docker_distro: ${{ fromJson(inputs.docker_distros) }}
        dotnet_version: ${{ fromJson(inputs.dotnet_versions) }}
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    -
      name: Restore State
      uses: ./.github/actions/cache-restore
    -
      uses: actions/download-artifact@v5
      name: Download nuget packages
      with:
        name: nuget
        path: ${{ github.workspace }}/artifacts/packages/nuget
    -
      name: Set up Docker
      uses: ./.github/actions/docker-setup
    -
      name: Docker Test
      if: success() && github.event_name == 'pull_request' || github.repository_owner != 'GitTools'
      uses: ./.github/actions/docker-test
      with:
        arch: ${{ inputs.arch }}
        docker_distro: ${{ matrix.docker_distro }}
        dotnet_version: ${{ matrix.dotnet_version }}
    -
      name: Docker Publish
      if: success() && github.event_name != 'pull_request' && github.repository_owner == 'GitTools' && github.ref_name == 'main'
      uses: ./.github/actions/docker-publish
      with:
        arch: ${{ inputs.arch }}
        docker_distro: ${{ matrix.docker_distro }}
        dotnet_version: ${{ matrix.dotnet_version }}
        docker_registry_username: ${{ secrets.DOCKER_USERNAME }}
        docker_registry_password: ${{ secrets.DOCKER_PASSWORD }}
        github_registry_username: ${{ github.repository_owner }}
        github_registry_password: ${{ secrets.DOCKER_GITHUB_TOKEN }}